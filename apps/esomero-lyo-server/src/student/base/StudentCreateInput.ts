/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsString,
  MaxLength,
  IsOptional,
  ValidateNested,
  IsDate,
} from "class-validator";
import { AttendanceCreateNestedManyWithoutStudentsInput } from "./AttendanceCreateNestedManyWithoutStudentsInput";
import { Type } from "class-transformer";
import { CourseWhereUniqueInput } from "../../course/base/CourseWhereUniqueInput";
import { ReportCreateNestedManyWithoutStudentsInput } from "./ReportCreateNestedManyWithoutStudentsInput";

@InputType()
class StudentCreateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  address?: string | null;

  @ApiProperty({
    required: false,
    type: () => AttendanceCreateNestedManyWithoutStudentsInput,
  })
  @ValidateNested()
  @Type(() => AttendanceCreateNestedManyWithoutStudentsInput)
  @IsOptional()
  @Field(() => AttendanceCreateNestedManyWithoutStudentsInput, {
    nullable: true,
  })
  attendances?: AttendanceCreateNestedManyWithoutStudentsInput;

  @ApiProperty({
    required: false,
    type: () => CourseWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => CourseWhereUniqueInput)
  @IsOptional()
  @Field(() => CourseWhereUniqueInput, {
    nullable: true,
  })
  course?: CourseWhereUniqueInput | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  dateOfBirth?: Date | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  email?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name?: string | null;

  @ApiProperty({
    required: false,
    type: () => ReportCreateNestedManyWithoutStudentsInput,
  })
  @ValidateNested()
  @Type(() => ReportCreateNestedManyWithoutStudentsInput)
  @IsOptional()
  @Field(() => ReportCreateNestedManyWithoutStudentsInput, {
    nullable: true,
  })
  reports?: ReportCreateNestedManyWithoutStudentsInput;
}

export { StudentCreateInput as StudentCreateInput };
